How to use UDF in JAVA?

Steps:
1) Create udf in java & build its jar.
2) Then add that jar using hive aux path setting into hive-site.xml file
such as,
    <property>
    <name>hive.aux.jars.path</name>
    <value>file:///C:\hdp\hive-0.14.0.2.2.0.0-2041\lib\hive-contrib-0.14.0.2.2.0.0-2041.jar</value>
    <description />
  </property>
  
  3) Create permanent function in hive using CREATE FUNCTION name_fun AS 'class.path.class_name'
  4) Call that function throgh java ui.
  
  Java Program to connect to hive.
  -----------------------------------------------------------------------------------------------------------------
  import java.sql.SQLException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;

import org.apache.hadoop.hive.cli.CliSessionState;
import org.apache.hadoop.hive.contrib.udf.UDFRowSequence;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hive.conf.HiveConf;
import org.apache.hadoop.hive.ql.Driver;
import org.apache.hadoop.hive.ql.session.SessionState;

public class HiveJdbcClient {
	private static String driverName = "org.apache.hive.jdbc.HiveDriver";
	private static String databaseURL = "jdbc:hive2://Server_name:10001/db_name";
	private static String userName = "hadoop user";
	private static String password = "password";
	
	private static Connection CreateNewConfiguration() {
		Connection con = null;
		try {
			Class.forName(driverName);
			con = DriverManager.getConnection(databaseURL, userName, password);	
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Connected....");
		return con;
	} 
	public static void main(String[] args) throws SQLException {
		
		int cycle_id=3;
		String tableName = "temp_dtcc_extract";
		int clientIdA = 1;
		int clientIdB = 2;
		String scenario = "Scenario-1";
		String scenario2 = "Scenario-2";
		String scenario3 = "Scenario-3";

		String mainTable = "dtcc_main_orc";
		String matchedtrades = "matchedtrades";
		String isMapped = "true";

		HiveConf hiveConf=new HiveConf(HiveJdbcClient.class);
		hiveConf.addResource(new Path("C:\\hdp\\hive-0.14.0.2.2.0.0-2041\\conf\\hive-site.xml"));
		hiveConf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_ENABLED,"true");

		Connection con = CreateNewConfiguration();
		DtccService dcs = new DtccService();

		// Insert data into main table 
		if(dcs.insertIntoDTCCMain(con,cycle_id,tableName,mainTable))
			System.out.println("Inserted Successfully into "+mainTable);

		// Insert records which is match on trade id for scenario 1
		if(dcs.insertIntoMatchedTrades(con, cycle_id, clientIdA, clientIdB, scenario, mainTable,matchedtrades))
			System.out.println("Inserted Successfully into "+matchedtrades);


		//		Insert records which is match on trade id for scenario 2
		if(dcs.insertIntoMatchedTradesscenario2(con, cycle_id, clientIdA, clientIdB, scenario2, mainTable,matchedtrades))
			System.out.println("Inserted Successfully into "+matchedtrades);

		//		Insert records which is match on trade id for scenario 2
		if(dcs.insertIntoMatchedTradesscenario3(con, cycle_id, clientIdA, clientIdB, scenario3, mainTable,matchedtrades))
			System.out.println("Inserted Successfully into "+matchedtrades);

		// Update Main table for records which matched in scenario 1
		if(dcs.updateDTCCMain(con,mainTable,matchedtrades,isMapped))
			System.out.println("Updated Successfully "+mainTable);
	}
}

//HiveConf hiveConf=new HiveConf(HiveJdbcClient.class);
//hiveConf.addResource(new Path("C:\\hdp\\hive-0.14.0.2.2.0.0-2041\\conf\\hive-site.xml"));
//hiveConf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_ENABLED,"false");
//hiveConf.setAuxJars("file:///C:\\hdp\\hive-0.14.0.2.2.0.0-2041\\lib\\hive-contrib-0.14.0.2.2.0.0-2041.jar;");
//Driver driver=new Driver(hiveConf);
//SessionState.start(new CliSessionState(hiveConf));
-----------------------------------------------------------------------------------------------------------------
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;


public class DtccService {
	Statement stmt=null;
	public boolean insertIntoDTCCMain(Connection con,int cycleId,String tempTableName,String mainTable){

		DtccService dcs = new DtccService();
		String sql1 = "INSERT INTO TABLE dtcc_poc1."+mainTable+" "
				+ "PARTITION (intCycleId="+cycleId+", intClientId)"
				+ "SELECT row_sequence()AS inc,intDTCCID,intExtractID,intUserID,vcrRefIdentifier,"
				+ "intProductId,vcrRefProductName,vcrRefCPGroup,vcrRefCP,bitProcessed,dtmDateCreated,vcrTRADE_ID,"
				+ "vcrTRADE_ID2,vcrUNIQUE_REF,vcrSTATUS,vcrTREP_TRADING_DAY,vcrTREP_TRADING_TIME,"
				+ "vcrTREP_TRANSACTIONTYPE,vcrTREP_INSTRUMENT_CODE_TYPE,vcrTREP_INSTRUMENT_CODE,"
				+ "vcrTREP_COUNTERPARTY_CODE_TYPE,vcrTREP_COUNTERPARTY_CODE,vcrTREP_UNIT_PRICE,vcrTREP_CURRENCY,"
				+ "vcrTREP_QUANTITY,vcrTREP_TRADING_SEGMENT,vcrTRADING_DATEPOST,vcrTREP_UNIT_PRICE_NEW,null,intClientId "
				+ "FROM dtcc_poc."+tempTableName+" WHERE intClientId is not null";
		try {
			stmt = con.createStatement();
			System.out.println("Running: " + sql1);
			stmt.execute(sql1);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return true;
	}
	public boolean insertIntoMatchedTrades(Connection con,int cycleId,int clientIdA,int clientIdB,String scenario, String mainTableName, String matchedtrades){
		String sql1 = "INSERT INTO TABLE dtcc_poc1."+matchedtrades+" "
				+ "SELECT A.intCycleId,A.intClientId,A.id,B.intCycleId,B.intClientId,B.id,'"+scenario+"'"
				+ " FROM	(Select * from "+mainTableName+" where intClientId="+clientIdA+" and intCycleId="+cycleId+") A "
				+ "JOIN (Select * from "+mainTableName+" where intClientId="+clientIdB+" and intCycleId="+cycleId+") B "
				+ "On A.vcrUNIQUE_REF=B.vcrUNIQUE_REF";
		try {
			stmt = con.createStatement();			
			System.out.println("Running: " + sql1);
			stmt.execute(sql1);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return true;
	}

	public boolean insertIntoMatchedTradesscenario2(Connection con,
			int cycle_id, int clientIdA, int clientIdB, String scenario2,
			String mainTable, String matchedtrades) {
		// TODO Auto-generated method stub
		
		String sql1 = "INSERT INTO TABLE dtcc_poc1."+matchedtrades+" "
				+ "SELECT A.intCycleId,A.intClientId,A.id,B.intCycleId,B.intClientId,B.id,'"+scenario2+"'"
				+ " FROM	(Select * from "+mainTable+" where intClientId="+clientIdA+" and intCycleId="+cycle_id+") A "
				+ "JOIN (Select * from "+mainTable+" where intClientId="+clientIdB+" and intCycleId="+cycle_id+") B "
				+ "On A.vcrTREP_INSTRUMENT_CODE=B.vcrTREP_INSTRUMENT_CODE "
				+ "and A.vcrTREP_COUNTERPARTY_CODE=B.vcrTREP_COUNTERPARTY_CODE "
				+ "and A.vcrTREP_UNIT_PRICE=B.vcrTREP_UNIT_PRICE "
				+ "and A.vcrTREP_CURRENCY=B.vcrTREP_CURRENCY "
				+ "and A.vcrTREP_QUANTITY=B.vcrTREP_QUANTITY";
		try {
			stmt = con.createStatement();			
			System.out.println("Running: " + sql1);
			stmt.execute(sql1);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	public boolean insertIntoMatchedTradesscenario3(Connection con,
			int cycle_id, int clientIdA, int clientIdB, String scenario3,
			String mainTable, String matchedtrades) {
		// TODO Auto-generated method stub
		
		String sql1 = "INSERT INTO TABLE dtcc_poc1."+matchedtrades+" "
				+ "SELECT A.intCycleId,A.intClientId,A.id,B.intCycleId,B.intClientId,B.id,'"+scenario3+"'"
				+ " FROM	(Select * from "+mainTable+" where intClientId="+clientIdA+" and intCycleId="+cycle_id+") A "
				+ "JOIN (Select * from "+mainTable+" where intClientId="+clientIdB+" and intCycleId="+cycle_id+") B "
				+ "On A.vcrTREP_INSTRUMENT_CODE=B.vcrTREP_INSTRUMENT_CODE "
				+ "and A.vcrTREP_COUNTERPARTY_CODE=B.vcrTREP_COUNTERPARTY_CODE "
				+ "and A.vcrTREP_CURRENCY=B.vcrTREP_CURRENCY "
				+ "and A.vcrTREP_QUANTITY=B.vcrTREP_QUANTITY";
		try {
			stmt = con.createStatement();			
			System.out.println("Running: " + sql1);
			stmt.execute(sql1);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	public boolean updateDTCCMain(Connection con, String mainTable,
			String matchedtrades, String isMapped) {
		// TODO Auto-generated method stub
		String[] ids = {"tp_id","cp_id"};
		String sql1;
		for (int i = 0; i < ids.length; i++) {
			sql1 = "UPDATE dtcc_poc1."+mainTable+" SET ismapped='"+isMapped+"' "
					+ "WHERE  "+mainTable+".id IN(SELECT "+ids[i]+" from dtcc_poc1."+matchedtrades+")";
			try {
				stmt = con.createStatement();			
				System.out.println("Running: " + sql1);
				stmt.executeUpdate(sql1);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return false;
	}
}
