Commands

Changing the block size of a dfs file & replication in Hadoop 
--> hadoop fs -Ddfs.blocksize=1m -Ddfs.replication=1 -put D:\datatoload\query\dtcctsv.txt /data

How to check values of hadoop cluster-->

C:\Users\vijay.shinde>hadoop fs -count -q -h /
  QUOTA  REMAINING_QUOTA     SPACE_QUOTA  REMAINING_SPACE_QUOTA    DIR_COUNT  FILE_COUNT      CONTENT_SIZE   FILE_NAME
  9223372036854775807 9223372036    none             inf             6467         6594        50574578797      /
   8.0 E           8.0 E            none             inf             6.3 K        6.4 K             47.1 G     /
    none             inf            none             inf              46          975                 7.4 G    /data
    
* How to calculate maximum size file in hadoop directory?
--> hadoop fs -du -h / | sort | head -3
    
hadoop fs -du -h /data/pig/input -- size of each
29.3 M  /data/pig/input/BX-Book-Ratings.csv
74.2 M  /data/pig/input/BX-Books.csv
11.7 M  /data/pig/input/BX-Users.csv
110     /data/pig/input/pigtest.txt

hadoop fs -du -h -s /data/pig/input -- with hypen gives total size of directory
115.2 M  /data/pig/input

-- Hive Yarn 
1) How to change default file format to ORC?
--> SET hive.default.fileformat=Orc --OR-- ALTER TABLE dbname.tablename SET FILEFORMAT ORC;

2) How to set Header to display on hive shell?
--> SET hive.cli.print.header=true

3) How to kill YARN Application?
--> yarn application -list

4) How to see application status?
--> yarn application -status application_1431933898363_0143
Application Report :
        Application-Id : application_1431933898363_0143
        Application-Name : HIVE-02a29667-9923-4b9a-838c-82c52aed0631
        Application-Type : TEZ
        User : hadoop
        Queue : default
        Start-Time : 1432804684236
        Finish-Time : 0
        Progress : 40%
        State : RUNNING
        Final-State : UNDEFINED
        Tracking-URL : N/A
        RPC Port : 61862
        AM Host : PDLFSSANDBOX04
        Aggregate Resource Allocation : 2322425 MB-seconds, 1132 vcore-seconds
        Diagnostics :
        
5) How to see which application in which States, for example How many application in RUNNING stage?
--> yarn application -list -appStates RUNNING ( This show list of application which has RUNNING stage)
    yarn application -list -appTypes TEZ  ( This show list of application which has TEZ as a application type)
Total number of applications (application-types: [] and states: [RUNNING]):1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Application-Id                | Application-Name                          |  Application-Type |  User  |  Queue  |   State   | Final-State | Progress | Tracking-URL |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
application_1431933898363_0143 | HIVE-02a29667-9923-4b9a-838c-82c52aed0631 |     TEZ           | hadoop | default |  RUNNING  | UNDEFINED   |  40%     |      N/A     |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

5) How to see ORC File data?
--> hive orcfiledump
// Hive version 0.11 through 0.14:
hive --orcfiledump <location-of-orc-file>
 
// Hive version 0.15 and later:
hive --orcfiledump [-d] [--rowindex <col_ids>] <location-of-orc-file>
 -d - dumps data in orc file format
// Hive version 1.2.0 and later:
hive --orcfiledump [-d] [-t] [--rowindex <col_ids>] <location-of-orc-file>
 -t prints timezone id of writer
// Hive version 1.3.0 and later:
hive --orcfiledump [-j] [-p] [-d] [-t] [--rowindex <col_ids>] <location-of-orc-file>
-j prints orc file metadata into json format

HELP OF YARN COMMANDS

usage: application
 -appStates <States>             Works with -list to filter applications
                                 based on input comma-separated list of
                                 application states. The valid application
                                 state can be one of the following:
                                 ALL,NEW,NEW_SAVING,SUBMITTED,ACCEPTED,RUN
                                 NING,FINISHED,FAILED,KILLED
 -appTypes <Types>               Works with -list to filter applications
                                 based on input comma-separated list of
                                 application types.
 -help                           Displays help for all commands.
 -kill <Application ID>          Kills the application.
 -list                           List applications. Supports optional use
                                 of -appTypes to filter applications based
                                 on application type, and -appStates to
                                 filter applications based on application
                                 state.
 -movetoqueue <Application ID>   Moves the application to a different
                                 queue.
 -queue <Queue Name>             Works with the movetoqueue command to
                                 specify which queue to move an
                                 application to.
 -status <Application ID>        Prints the status of the application.

Usage: yarn [--config confdir] COMMAND
       where COMMAND is one of:
  resourcemanager      run the ResourceManager
  nodemanager          run a nodemanager on each slave
  timelineserver       run the timeline server
  rmadmin              admin tools
  version              print the version
  jar <jar>          run a jar file
  application          prints application(s) report/kill application
  applicationattempt   prints applicationattempt(s) report
  container            prints container(s) report
  node                 prints node report(s)
  cluster              print cluster information
  queue                prints queue information
  logs                 dump container logs
  classpath            prints the class path needed to get the
                       Hadoop jar and the required libraries
  daemonlog            get/set the log level for each daemon
  or
  CLASSNAME            run the class named CLASSNAME
